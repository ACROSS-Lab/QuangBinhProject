/**
* Name: FloodingUI
* This wizard creates a new experiment file. 
* Author: drogoul
* Tags: 
*/

experiment Run model:"Flooding Model.gaml" type:gui {
	
	point start_point;
	point end_point;  
	geometry line; 
	bool river_in_3D <- false; 
	rgb background_color <- #lightgray; 

	
	output {
		layout #none controls: false toolbars: false editors: false parameters: false consoles: false tabs: false;
		display map type: 3d axes: false background: background_color antialias: false{

			species river visible: !river_in_3D transparency: 0.1{
				draw shape color: rgb(95,158,160);
			}			

			species road {
				draw shape color: drowned ? (#cadetblue) : color depth: height border: drowned ? #white:color;
			}
		 	species buildings {
		 		draw shape color: drowned ? (#cadetblue) : color depth: height * 2 border: drowned ? #white:color;	
		 	}
		 	species dyke {
		 		draw shape + 5 color: drowned ? (#cadetblue) : color depth: height * 2 border: drowned ? #white:color;	
			} 
			species people {
				draw sphere(18) color:#darkseagreen;
			}
			species evacuation_point;

			mesh cell above: 0 triangulation: true smooth: false color: cell collect each.color visible: river_in_3D;
			event #mouse_down {
				if (state != "s_diking") { return;}
				if (start_point = nil) {
					start_point <- #user_location;
				} else {
					end_point <- #user_location;
					geometry l <- line([start_point, end_point]);
					ask simulation { 
						create dyke with:(shape:l + dyke_width);
					}
					start_point <- nil;
					end_point <- nil;
				}

			}
			graphics g {
				if (state = "s_diking") {
					draw "Build dykes with the mouse. \nPress 'f' to start flooding" font: font ("Helvetica", 18, #bold) at: {0,2000, 30} anchor: #top_left color: #black;	
				} else if (state = "s_restart") {
					draw "Restarting the simulation" font: font ("Helvetica", 18, #bold) at: {0,2000, 30} anchor: #top_left color: #black;	
				} else if (state = "s_flooding") {
					draw "Casualties: " + casualties font: font ("Helvetica", 18, #bold) at: {0,2000, 30} anchor: #top_left color: #black;	
				}
			}
			
			event "f" {
				if (state != "s_diking") {return;}
				flooding_requested <- true;
			}
			
			event "r" {
				if (state != "s_flooding") {return;}
				restart_requested <- true;
			}
			
			event #mouse_move { 
				if (state != "s_diking") {return;}
				if (start_point != nil) {
					line <- line([start_point, #user_location]);
				} else {
					line <- nil;
				}
			}
			
			graphics ll {
				if (line != nil) {draw line + dyke_width color: #red;}
			}
		}

	}

}
